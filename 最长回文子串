class Solution:
    def longestPalindrome(self, s):
        """
        :type s: str
        :rtype: str
        """
        s = '#' + '#'.join(s) + '#'
        pos = 0
        max_right = 0
        RL = [0]*len(s)
        max_RL = [0,0]
        for i in range(len(s)):
            if i < max_right:
                RL[i] = min(RL[2*pos-i], max_right-i)
            else:
                RL[i] = 1
                
            while i-RL[i]>=0 and i+RL[i]<len(s) and s[i+RL[i]] == s[i-RL[i]]:
                RL[i] += 1
                
            if i+RL[i]-1 > max_right:
                pos = i
                max_right = i+RL[i]-1
            if RL[i] > max_RL[1]:
                max_RL[0], max_RL[1] = i, RL[i]
                
        
        c =  s[max_RL[0]-max_RL[1]+1: max_RL[0]+max_RL[1]]
        strs = c.split('#')
        return ''.join(strs)
                
