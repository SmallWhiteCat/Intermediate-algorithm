# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        if l1.val == 0 and l1.next == None:
            return l2
        if l2.val == 0 and l2.next == None:
            return l1
        
        p1 = ListNode(0)
        p2 = ListNode(0)
        p1.next = l1
        p2.next = l2
        k = 0
        while p1.next and p2.next: 
            p1 = p1.next
            p2 = p2.next
            if p1.val+p2.val+k > 9:
                p1.val = p1.val + p2.val + k - 10
                k = 1
            else:
                p1.val = p1.val + p2.val + k
                k = 0 
        if p2.next:
            p1.next = p2.next
        while p1.next:   
            p1 = p1.next
            # print(p1.val)
            if k and p1.val == 9:
                p1.val = 0
                k = 1
            elif k and p1.val != 9:
                p1.val += 1
                k = 0
        if k:
            p0 = ListNode(1)
            p1.next = p0
        return l1
