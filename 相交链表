# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        if not headA or not headB:
            return None
        l1 = self.len_link(headA)
        l2 = self.len_link(headB)
        p1 = headA
        p2 = headB
        if l1 > l2:
            l = l1-l2
            while l:
                p1 = p1.next
                l -= 1
        if l2 > l1:
            l = l2-l1
            while l:
                p2 = p2.next
                l -= 1
        l = min(l1, l2)
        while l:
            if p1 == p2:
                return p1
            p1 = p1.next
            p2 = p2.next
            l -= 1
        return None
    def len_link(self, head):
        l = 0
        node = head
        while node:
            node = node.next
            l += 1
        return l
        
